{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "attempted",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "available",
						"type": "uint256"
					}
				],
				"name": "BankCapExceeded",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "sent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minimum",
						"type": "uint256"
					}
				],
				"name": "DepositTooSmall",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requested",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "available",
						"type": "uint256"
					}
				],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requested",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "available",
						"type": "uint256"
					}
				],
				"name": "InsufficientBankLiquidity",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TransferFailed",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requested",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "WithdrawalLimitExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAmount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalance",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "remainingBalance",
						"type": "uint256"
					}
				],
				"name": "Withdrawal",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MINIMUM_DEPOSIT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bankCap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBankStats",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "depositsCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "withdrawalsCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "remainingCapacity",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "userBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxWithdrawal",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "canWithdrawFully",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalBankBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalDeposits",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalWithdrawals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "vaults",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawalLimit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"BankCapExceeded(uint256,uint256)": [
					{
						"notice": "Error cuando un depósito excedería la capacidad máxima del banco"
					}
				],
				"DepositTooSmall(uint256,uint256)": [
					{
						"notice": "Error cuando el depósito es menor al mínimo requerido"
					}
				],
				"InsufficientBalance(uint256,uint256)": [
					{
						"notice": "Error cuando el usuario no tiene suficiente balance para retirar"
					}
				],
				"InsufficientBankLiquidity(uint256,uint256)": [
					{
						"notice": "Error cuando el banco no tiene suficiente ETH líquido"
					}
				],
				"TransferFailed()": [
					{
						"notice": "Error cuando falla la transferencia de ETH al usuario"
					}
				],
				"WithdrawalLimitExceeded(uint256,uint256)": [
					{
						"notice": "Error cuando el retiro supera el límite permitido por transacción"
					}
				],
				"ZeroAmount()": [
					{
						"notice": "Error cuando se intenta operar con cantidad cero"
					}
				]
			},
			"events": {
				"Deposit(address,uint256,uint256)": {
					"notice": "Emitido cuando un usuario deposita ETH exitosamente"
				},
				"Withdrawal(address,uint256,uint256)": {
					"notice": "Emitido cuando un usuario retira ETH exitosamente"
				}
			},
			"kind": "user",
			"methods": {
				"MINIMUM_DEPOSIT()": {
					"notice": "Depósito mínimo requerido para realizar una transacción"
				},
				"bankCap()": {
					"notice": "Capacidad máxima total de ETH que puede almacenar el banco"
				},
				"constructor": {
					"notice": "Inicializa el contrato con los límites del banco predefinidos"
				},
				"deposit()": {
					"notice": "Permite a los usuarios depositar ETH en su bóveda personal"
				},
				"getBankStats()": {
					"notice": "Obtiene estadísticas generales del banco"
				},
				"getUserInfo(address)": {
					"notice": "Obtiene información completa sobre la cuenta de un usuario"
				},
				"totalBankBalance()": {
					"notice": "Balance total de ETH actualmente almacenado en el banco"
				},
				"totalDeposits()": {
					"notice": "Contador del número total de depósitos realizados desde el despliegue"
				},
				"totalWithdrawals()": {
					"notice": "Contador del número total de retiros realizados desde el despliegue"
				},
				"vaults(address)": {
					"notice": "Mapeo que almacena el balance de cada usuario en su bóveda personal"
				},
				"withdraw(uint256)": {
					"notice": "Permite a los usuarios retirar ETH de su bóveda"
				},
				"withdrawalLimit()": {
					"notice": "Límite máximo que un usuario puede retirar en una sola transacción"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/kipubank.sol": "KipuBank"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/kipubank.sol": {
			"keccak256": "0x48677babe61818e9db6f2670f2f674de4e05bc41921fb64e6c9dbe98db90b626",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb9759589435b032ee6848b864c4b4b7bc3a18fa80e3d1792c6e302356001772",
				"dweb:/ipfs/QmT3mKZmMChximSszEzHNUBWMLtwrSg2FxYDCnFGp4pE9A"
			]
		}
	},
	"version": 1
}